trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  - group: DockerTest
  - name: resourceGroupName
    value: DockerDeployTestRG
  - name: location
    value: westeurope
  - name: imageWebApiName
    value: webapidockertest
  - name: tag
    value: "$(Build.BuildId)"
stages:
  - stage: Infrastructure
    displayName: Infrastructure
    jobs:
      - job: Infrastruction
        displayName: Create infrastruction
        steps:
          - task: AzureCLI@2
            displayName: Create Resource Group
            inputs:
              azureSubscription: $(lib-subscriptionConn)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az group create --name $(resourceGroupName) --location $(location)
          - task: AzureCLI@2
            displayName: Create Resources
            inputs:
              azureSubscription: $(lib-subscriptionConn)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az deployment group create \
                --resource-group $(resourceGroupName) \
                --template-file $(Build.SourcesDirectory)/Infrastructure/main.bicep \
                --parameters location=$(location) imageWebApiName=$(imageWebApiName)
  # - stage: Build
  #   displayName: Build
  #   jobs:
  #     - job: Build
  #       displayName: Docker build
  #       pool:
  #         vmImage: ubuntu-latest
  #       steps:
  #         - task: Docker@2
  #           displayName: Build an image
  #           inputs:
  #             command: build
  #             dockerfile: "$(Build.SourcesDirectory)/WebAPI/Dockerfile"
  #             tags: |
  #               $(imageWebApiName)
  - stage: Build
    displayName: Build
    jobs:
      - job: Build
        displayName: Docker build
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageWebApiName)
              dockerfile: "$(Build.SourcesDirectory)/WebAPI/Dockerfile"
              containerRegistry: $(lib-dockerRegistryServiceConn)
              tags: |
                latest

trigger:
  - manual

pool:
  vmImage: ubuntu-latest

variables:
  - group: DockerTest
  - name: resourceGroupName
    value: DockerDeployTestRG
  - name: location
    value: westeurope
  - name: imageWebApiName
    value: webapidockertest

stages:
  - stage: Infrastructure
    displayName: Infrastructure
    jobs:
      - job: Infrastruction
        displayName: Create infrastructure
        steps:
          - task: AzureCLI@2
            displayName: Create Resource Group
            inputs:
              azureSubscription: $(lib-subscriptionConn)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az group create --name $(resourceGroupName) --location $(location)
          - task: AzureCLI@2
            displayName: Create Resources
            inputs:
              azureSubscription: $(lib-subscriptionConn)
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: |
               $result = $($(az deployment group create `
               --resource-group $(resourceGroupName) `
               --template-file $(Build.SourcesDirectory)/Infrastructure/main.bicep `
               --parameters location=$(location) imageWebApiName=$(imageWebApiName)) | ConvertFrom-Json)
               Write-Host $result 
               $containerRegistryName = $result.properties.outputs.dockerContainerRegistryName.value 
               $webAppName = $result.properties.outputs.webAppName.value
               ##vso[task.setvariable variable=containerRegistryName;]$containerRegistryName
               ##vso[task.setvariable variable=webAppName;]$webAppName
          - bash: echo $(containerRegistryName)
          - task: AzureCLI@2
            displayName: 'Add webhook for WebApi Image from registry'
            inputs:
              azureSubscription: $(lib-subscriptionConn)
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: |
                az acr webhook create `
                --name $(imageWebApiName)CD `
                --registry $(containerRegistryName) `
                --resource-group $(resourceGroupName) `
                --actions push `
                --uri $(az webapp deployment container config --name $(webAppName) --resource-group $resourceGroupName --enable-cd true --query CI_CD_URL --output tsv) `
                --scope "$($imageWebApiName):latest"